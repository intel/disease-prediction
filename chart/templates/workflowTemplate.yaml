apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Values.metadata.name }}
spec:
  serviceAccountName: {{ .Values.serviceAccountName }}
  templates:
    - name: main
      dag:
        tasks:
          - name: vision-tlt-fine-tuning
            template: disease-prediction
            arguments: 
              parameters: 
                - name: config
                  value: {{ .Values.workflow.config.vision_tlt }}
                - name: script
                  value: {{ .Values.workflow.script.vision_tlt }}
                - name: tag
                  value: {{ .Values.image.vision_tlt }}
          - name: hf-nlp-fine-tuning
            template: disease-prediction
            arguments: 
              parameters: 
                - name: config
                  value: {{ .Values.workflow.config.hf_nlp }}
                - name: script
                  value: {{ .Values.workflow.script.hf_nlp }}
                - name: tag
                  value: {{ .Values.image.hf_nlp }}
          - name: ensemble
            template: disease-prediction
            arguments: 
              parameters: 
                - name: config
                  value: {{ .Values.workflow.config.use_case }}
                - name: script
                  value: {{ .Values.workflow.script.use_case }}
                - name: tag
                  value: {{ .Values.image.use_case }}
            dependencies:
              - vision-tlt-fine-tuning
              - hf-nlp-fine-tuning
        failFast: true
    - name: disease-prediction
      inputs:
        {{- if eq .Values.dataset.type "s3" }}
        artifacts:
          - name: dataset
            path: /workspace/data
            s3:
              key: '{{ .Values.dataset.s3.key }}/brca'
          - name: config
            path: /workspace/configs
            s3:
              key: '{{ .Values.dataset.s3.key }}/configs'
        {{ end }}
        parameters:
          - name: config
          - name: script
          - name: tag
      outputs: 
        artifacts:
          - name: '{{"{{inputs.parameters.tag}}"}}-output'
            path: /workspace/output
      container:
        name: ''
        image: '{{ .Values.image.base }}:{{"{{inputs.parameters.tag}}"}}'
        command:
          - python
        args:
          - 'src/{{"{{inputs.parameters.script}}"}}'
          - '--config_file'
          - '/workspace/configs/{{"{{inputs.parameters.config}}"}}.yaml'
        env:
          - name: http_proxy
            value: '{{"{{workflow.parameters.http_proxy}}"}}'
          - name: https_proxy
            value: '{{"{{workflow.parameters.http_proxy}}"}}'
        volumeMounts:
          - name: output-dir
            mountPath: /workspace/output
        {{ if eq .Values.dataset.type "nfs" }}
          - name: dataset-dir
            mountPath: /workspace/data
            subPath: '{{ .Values.dataset.nfs.datasetSubPath }}'
          - name: config-dir
            mountPath: /workspace/configs
            subPath: '{{ .Values.dataset.nfs.configSubPath }}'
        {{ end }}
        imagePullPolicy: Always
      {{ if eq .Values.dataset.type "nfs" }}
      volumes:
      - name: dataset-dir
        nfs: 
          server: {{ .Values.dataset.nfs.server }}
          path: {{ .Values.dataset.nfs.path }}
          readOnly: true
      - name: config-dir
        nfs: 
          server: {{ .Values.dataset.nfs.server }}
          path: {{ .Values.dataset.nfs.path }}
          readOnly: true
      {{ end }}
  entrypoint: main
  arguments:
    parameters:
      - name: http_proxy
        value: {{ .Values.proxy }}
  volumeClaimTemplates:
    - metadata:
        name: output-dir
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
